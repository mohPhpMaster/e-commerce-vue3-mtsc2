import {ref} from "vue";
import {api} from "@/plugins/api";
import type {ICartFee} from "@/types/cart-fee-d-t";

export interface IFee {
    fees: ICartFee[];
    setFees: (value: ICartFee[]) => void;

    shipCost: Ref<number>;
    setShipCost: (value: number) => void;

    selectedFee: ICartFee | null;
    setSelectedFee: (value: ICartFee) => void;

    getOnMounted: () => Function[];
    getWatch: () => [Ref<ICartFee[]>, Function];
    handleShippingCost: (value: (number | string)) => void;
}

// export const useFeesStore = defineStore("fees", () => {
export const useFeesStore = () => {
    const [selectedFee, setSelectedFee] = useState<ICartFee | null>('selectedFee', () =>null);
    const [fees, setFees] = useState<ICartFee[]>('fees', () =>[] as ICartFee[]);
    const [shipCost, setShipCost] = useState<number>('shipCost', () =>0);

    // const $fees = ref<ICartFee[]>([] as ICartFee[]);
    // const $shipCost = ref<number>(0);
    // const $selectedFee = ref<ICartFee | null>(null);

    let $instance: IFee = {
        fees,
        setFees,

        shipCost,
        setShipCost,

        selectedFee,
    };

    $instance.handleShippingCost = (value: number | string) => {
        if (value === 'free' || value === 0) {
            $instance.setShipCost(0);
        } else {
            $instance.setShipCost(value as number);
        }
    };

    $instance.setSelectedFee = (fee: ICartFee) => {
        setSelectedFee(fee);
        $instance.handleShippingCost(fee.value);
    };

    $instance.getOnMounted = () => [
        () => {
            api.cartFeesData()
                .then((res) => $instance.setFees(res))
        }
    ];

    $instance.getWatch = () => [
        $instance.fees,
        (n) => {
            // $instance.handleShippingCost(n?.find((fee) => fee?.is_default || false)?.value || 0);
            const defaultFee = n?.find((fee) => fee?.is_default || false);
            if (defaultFee) {
                $instance.setSelectedFee(defaultFee);
            }
        }
    ];

    return $instance;
};
// });